name: Docker Image CI

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.IAM_ROLE_ARN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          ECR_URL="$ECR_REGISTRY/${{ vars.IMAGE_NAME }}:${{ github.sha }}"
          docker build -t $ECR_URL .
          docker push $ECR_URL
          echo "image=$ECR_URL" >> $GITHUB_OUTPUT

      - name: Render new task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: taskdef.json
          container-name: ${{ vars.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Create deployment
        uses: aws-actions/aws-codedeploy-deploy-ecs@v1
        with:
          application-name: ${{ vars.CODEDEPLOY_APP }}
          deployment-group: ${{ vars.CODEDEPLOY_DEPLOYMENT_GROUP }}
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          wait-for-deployment: true
